/* .pokemon-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  perspective: 1000px;
}

.pokemon-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
  grid-gap: 1rem;
  max-width: 1000px;
  margin: 0 auto;
}

/* Front of card 
.pokemon-card {
  position: relative;
  width: auto;
  height: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  background-color: #fff;
  border-radius: 0.5rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  padding: 1rem;
  transform-style: preserve-3d;
  transition: transform 0.6s;
  backface-visibility: hidden;
  transform-style: preserve-3d;
  transition: transform 0.6s;
  backface-visibility: hidden;
}

.pokemon-card.flipped {
  transform: rotateY(180deg);
}

@keyframes flip {
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(180deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}

.pokemon-card .front,
.pokemon-card .back {
  position: absolute;
  backface-visibility: hidden;
}

.pokemon-card .back {
  transform: rotateY(180deg);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;;
}

/* Pokemon element 
.pokemon {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.pokemon img {
  max-width: 100%;
  max-height: 100%;
}

.pokemon-name {
  font-size: 1.2rem;
  font-weight: bold;
  margin-top: 0.5rem;
}

.pokemon-type {
  margin-top: 0.5rem;
}

.pagination-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 1rem;
  position: absolute;
  bottom: 2rem;
  width: 100%;
  height: 100vh;
}

.pagination-btn {
  background-color: #fb6c6c;
  border: none;
  border-radius: 0.5rem;
  color: #fff;
  padding: 0.5rem 1rem;
  font-size: 1rem;
  cursor: pointer;
  margin: 0.5rem;
}

.pagination-btn:hover {
  background-color: #e45656;
}

.nav-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  background-color: #f2f2f2;
  padding: 10px;
}

.nav-item {
  font-weight: bold;
  text-transform: uppercase;
  margin-right: 10px;
}

.search-container {
  display: flex;
  align-items: center;
}

.search-container input {
  border: none;
  padding: 5px;
  margin-right: 5px;
  border-radius: 5px;
}

.search-container button {
  border: none;
  background-color: #4CAF50;
  color: white;
  padding: 5px;
  border-radius: 5px;
  cursor: pointer;
}


import { useState, useEffect, useRef } from 'react';
import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';

import './App.css';
import About from './About';


function App() {
  const [pokemonList, setPokemonList] = useState([]);
  const [page, setPage] = useState(1);
  const [limit] = useState(16);
  const pokemonGrid = useRef(null);
 

  // Function to fetch Pokemon data from API and update state with new data
  async function fetchPokemonData() {
    const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${(page - 1) * limit}&sort=id`);
    const data = await response.json();
  
    // Fetch details for each pokemon including type information
    const pokemonDetails = await Promise.all(data.results.map(async (pokemon) => {
      const response = await fetch(pokemon.url);
      return response.json();
    }));
  
    setPokemonList(pokemonDetails);
  }

function setCurrentPage(newPage) {
  setPage(newPage);
}

 
  function handlePrevious() {
    setCurrentPage(prevPage => prevPage - 1);
  }
  function handleNext() {
    setCurrentPage(prevPage => prevPage + 1);
  }

  function handleCardClick(event) {
    const pokemonCard = event.target.closest(".pokemon-card");
    if (!pokemonCard) return;
  
    pokemonCard.classList.toggle("flipped");
  }
  

  // Fetch Pokemon data when offset changes
  useEffect(() => {
    fetchPokemonData();
  }, [(page - 1) * limit]);

  // Update the Pokemon cards on the page when the Pokemon list changes
  useEffect(() => {
    if (pokemonList.length === 0) return;
  
    const uniquePokemonList = Array.from(new Set(pokemonList.map(pokemon => pokemon.name))).map(name => {
      return pokemonList.find(pokemon => pokemon.name === name);
    });
  
    pokemonGrid.current.innerHTML = '';
  
    uniquePokemonList.forEach(async (pokemon) => {
      // Create a div to hold the Pokemon card
      const pokemonCard = document.createElement("div");
      pokemonCard.classList.add("pokemon-card");
     
  
      // Set the background color of the card based on the first element type of the Pokemon
      const backgroundColor = {
        grass: "#78C850",
        fire: "#F08030",
        water: "#6890F0",
        bug: "#A8B820",
        normal: "#A8A878",
        poison: "#A040A0",
        electric: "#F8D030",
        ground: "#E0C068",
        fairy: "#EE99AC",
        fighting: "#C03028",
        psychic: "#F85888",
        rock: "#B8A038",
        ghost: "#705898",
        ice: "#98D8D8",
        dragon: "#7038F8",
        dark: "#705848",
        steel: "#B8B8D0"
      }[pokemon.types[0].type.name];
  
      pokemonCard.style.backgroundColor = backgroundColor;
  
      // Add Pokemon image to card
      const pokemonImg = document.createElement("img");
      pokemonImg.src = pokemon.sprites.front_default;
      pokemonCard.appendChild(pokemonImg);
  
      // Add Pokemon index to card
      const pokemonIndex = document.createElement("div");
      pokemonIndex.classList.add("pokemon-index");
      pokemonIndex.textContent = `#${pokemon.id.toString().padStart(3, '0')}`;
      pokemonCard.appendChild(pokemonIndex);
  
      // Add Pokemon name to card
      const pokemonName = document.createElement("div");
      pokemonName.textContent = pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1);
      pokemonCard.appendChild(pokemonName);

      // Add click event listener to flip the card when clicked
    pokemonCard.addEventListener('click', () => {
      pokemonCard.classList.toggle('flipped');
    });
  
      // Add the completed Pokemon card to the grid
      pokemonGrid.current.appendChild(pokemonCard);
    });
  
  }, [pokemonList]);

  return (
    <Router>
    <div className="App">
      <div class="nav-container">
        <Link to="/" class="nav-item">Pokedex</Link>
        <div class="search-container">
          <input type="text" placeholder="Search..." />
          <button type="submit">Search</button>
        </div>
        <Link to="/about" class="nav-item">About</Link>
      </div>
      <Switch>
        <Route exact path="/">
          <div ref={pokemonGrid} className="pokemon-grid"></div>
          <div className="pagination-container">
            <button class="pagination-btn previous-btn" onClick={handlePrevious}>{'<'}</button>
            <button class="pagination-btn next-btn" onClick={handleNext}>{'>'}</button>
          </div>
        </Route>
        <Route path="/about">
          <About />
        </Route>
      </Switch>
    </div>
  </Router>
  );
  }
export default App;



import React from "react";

function About() {
  return (
    <div>
      <h1>About</h1>
      <p>Welcome to the Pokedex app! This app is built using React and utilizes the PokeAPI to display information about different Pokemon.</p>
    </div>
  );
}

export default About;*/